#!/bin/bash
## stats tests config script

while getopts :c option
do
    case "${option}"
    in
    c) STATS_COVERAGE_BUILD="y";;
    esac
done

if [ -z ${CC+x} ]; then 
    CC=gcc
fi
if [ -z ${CXX+x} ]; then 
    CXX=g++
fi
if [ -z ${FC+x} ]; then 
    FC=gfortran
fi

if [[ !(-z ${KEITH_DEV_SETTINGS+x}) ]]; then
    CC=gcc-mp-7
    CXX=g++-mp-7
    FC=gfortran-mp-7
fi

#

if [[ "${STATS_COVERAGE_BUILD}" == "y" ]]; then 
    echo "stats tests: coverage build"
fi

#

WDIR=${PWD}

if [ -z ${ARMA_INCLUDE_PATH+x} ]; then 
    if [ -f ${WDIR}/../../include/armadillo ]; then 
        ARMA_INCLUDE_PATH="./../../include"
    elif [ -f /usr/include/armadillo ]; then
        ARMA_INCLUDE_PATH="/usr/include"
    elif [ -f /usr/local/include/armadillo ]; then
        ARMA_INCLUDE_PATH="/usr/local/include"
    elif [ -f /opt/include/armadillo ]; then
        ARMA_INCLUDE_PATH="/opt/include"
    elif [ -f /opt/local/include/armadillo ]; then
        ARMA_INCLUDE_PATH="/opt/local/include"
    else 
        echo "stats tests: cannot find the armadillo library."
        echo ""
        exit 1
    fi
fi

echo "stats tests: ARMA_INCLUDE_PATH set to ${ARMA_INCLUDE_PATH}"

# coverage build? used for codecov

if [[ "${STATS_COVERAGE_BUILD}" == "y" ]]; then 
    STATS_OPT_FLAGS="-g -O0 -Wall -DSTATSLIB_GO_INLINE --coverage -fno-inline -fno-inline-small-functions -fno-default-inline"
else
    STATS_OPT_FLAGS="-O3"
fi

# get include path for StatsLib

cd ../..
STATS_INCLUDE_PATH=${PWD}/include
cd ${WDIR}

# BLAS and LAPACK settings

if [[ $OSTYPE == darwin* ]] ; then
    STATS_BLAS_LAPACK="-framework Accelerate"
elif [[ $OSTYPE == *linux* ]] ; then
    STATS_BLAS_LAPACK="-lblas -llapack"
else
    STATS_BLAS_LAPACK="-lblas -llapack"
fi

sed -e "s|@CC@|${CC}|" \
    -e "s|@CXX@|${CXX}|" \
    -e "s|@FC@|${FC}|" \
    -e "s|@ARMA_INCLUDE_PATH@|${ARMA_INCLUDE_PATH}|" \
    -e "s|@STATS_BLAS_LAPACK@|${STATS_BLAS_LAPACK}|" \
    -e "s|@STATS_OPT_FLAGS@|${STATS_OPT_FLAGS}|" \
    -e "s|@STATS_INCLUDE_PATH@|${STATS_INCLUDE_PATH}|" \
    Makefile.in > Makefile
