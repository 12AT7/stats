#!/bin/bash
## Stats tests config script

while getopts cdgl:m:o:p option; do
    case "${option}" in
        c) STATS_COVERAGE="y";;
        d) STATS_BUILD="dev";;
        g) STATS_DEBUG="y";;
        l) STATS_LIN_ALG_LIB=${OPTARG};;
        m) STATS_MATRIX_OPS=${OPTARG};;
        o) STATS_OPT=${OPTARG};;
        p) STATS_PARALLEL="y";;
    esac
done

# compiler checks

if [ -z ${CC+x} ]; then 
    CC=gcc
fi
if [ -z ${CXX+x} ]; then 
    CXX=g++
fi
if [ -z ${FC+x} ]; then 
    FC=gfortran
fi

IS_DARWIN=$($CXX -dumpmachine 2>&1 | grep -i -c "darwin")
GCC_COMPILER=$($CXX --version 2>&1 | grep -i -c -E "gcc")
# APPLE_COMPILER=$($CXX --version 2>&1 | grep -i -c -E 'apple llvm')

# announcements

echo ""

if [[ "${STATS_COVERAGE}" == "y" ]]; then 
    echo "Stats: coverage build"
fi

if [[ "${STATS_DEBUG}" == "y" ]]; then
    echo "Stats: debug build"
fi

# get working directory
WDIR=${PWD}

# Matrix Linear Algebra Libraries
STATS_MATLIB_FLAGS=
STATS_MATLIB_PATH="."

# look for Armadillo
if [[ "${STATS_LIN_ALG_LIB}" == "arma" ]]; then
    if [ -z ${ARMA_INCLUDE_PATH+x} ]; then 
        
        declare -a ARMA_DIRS=("${WDIR}/../../include" "/usr/include" "/usr/local/include" "/opt/include" "/opt/local/include")
        ARMA_INCLUDE_PATH=

        for i in "${ARMA_DIRS[@]}"; do
            if [ -f "$i"/armadillo ]; then 
                ARMA_INCLUDE_PATH="$i"
                break
            fi
        done

        if [[ $ARMA_INCLUDE_PATH == "" ]]; then
            echo "Stats tests: cannot find the armadillo library."
            echo ""
            exit 1
        fi
    fi

    STATS_MATLIB_FLAGS="-DSTATS_USE_ARMA -DARMA_NO_DEBUG"
    STATS_MATLIB_PATH=$ARMA_INCLUDE_PATH
fi

echo "Stats tests: STATS_MATLIB_PATH set to ${STATS_MATLIB_PATH}"

# set optimization flags

if [[ "${STATS_COVERAGE}" == "y" ]]; then 
    echo "Stats tests: coverage build"
    STATS_OPT_FLAGS="-g -O0 --coverage -fno-inline -fno-inline-small-functions -fno-default-inline -DSTATS_NO_OMP"
elif [[ "${STATS_DEBUG}" == "y" ]]; then
    STATS_OPT_FLAGS="-g -O0 -DSTATS_NO_OMP"
else
    if [[ "${STATS_OPT}" == "" ]]; then
        STATS_OPT_FLAGS="-O3 -march=native"
    else
        STATS_OPT_FLAGS="${STATS_OPT}"
    fi

    if [[ "${STATS_PARALLEL}" == "y" ]]; then
        STATS_OPT_FLAGS="${STATS_OPT_FLAGS} -fopenmp"
    fi
fi

STATS_WARN_FLAGS="-Wall"

# dev build

if [[ "${STATS_BUILD}" == "dev" ]]; then
    cd ../..
    STATS_INCLUDE_PATH=${PWD}/include
    STATS_INSTALL_PATH=${PWD}
    cd ${WDIR}
else
    if [ -z ${STATS_INCLUDE_PATH+x} ]; then
        STATS_INCLUDE_PATH="/usr/local/include"
    fi
fi

# BLAS and LAPACK settings

if [[ !(-z ${STATS_MATRIX_OPS+x}) ]]; then
    STATS_BLAS_LAPACK="${STATS_MATRIX_OPS}"
else
    if [[ $OSTYPE == darwin* ]] ; then
        STATS_BLAS_LAPACK="-framework Accelerate"
    else
        STATS_BLAS_LAPACK="-lblas -llapack"
    fi
fi

if [ "$IS_DARWIN" -eq "1" ] && [ "$GCC_COMPILER" -eq "1" ]; then
    echo ""
    echo "Stats: To enable AVX features, your compiler will use the Apple LLVM assembler"
    STATS_OPT_FLAGS="-Wa,-q ${STATS_OPT_FLAGS}"
fi

# final optimization checks

if [[ "${STATS_DEBUG}" == "y" ]]; then
    STATS_OPT_FLAGS="-O0 -g"
fi

echo "Stats: optimization flags set to: ${STATS_OPT_FLAGS}"

# end

echo ""

sed -e "s|@CC@|${CC}|" \
    -e "s|@CXX@|${CXX}|" \
    -e "s|@FC@|${FC}|" \
    -e "s|@STATS_MATLIB_FLAGS@|${STATS_MATLIB_FLAGS}|" \
    -e "s|@STATS_MATLIB_PATH@|${STATS_MATLIB_PATH}|" \
    -e "s|@STATS_BLAS_LAPACK@|${STATS_BLAS_LAPACK}|" \
    -e "s|@STATS_WARN_FLAGS@|${STATS_WARN_FLAGS}|" \
    -e "s|@STATS_OPT_FLAGS@|${STATS_OPT_FLAGS}|" \
    -e "s|@STATS_INCLUDE_PATH@|${STATS_INCLUDE_PATH}|" \
    -e "s|@STATS_INSTALL_PATH@|${STATS_INSTALL_PATH}|" \
    Makefile.in > Makefile
